<h1>HTML as an Application of SGML

<p>HTML is an application of ISO Standard 8879:1986 - Standard
Generalized Markup Language (SGML)<liref refid=SGML>. SGML is a system for
defining structured document types and markup languages to represent
instances of those document types. The SGML declaration for HTML and
the HTML document type definitions (DTDs) are provided in Section 12.

<h2>SGML Documents

<p>Every SGML document has three parts:

<tl>
<tli>SGML declaration:

Binds SGML processing quantities and syntax token names to specific
values. For example, the SGML declaration in the HTML DTD specifies
that the string that opens an end tag is "</" and the maximum length
of a name is 72 characters.

<tli>Prologue:

Includes one or more document type declarations, which specify the
element types, element relationships and attributes.

<tli>Instance:

Contains the data and markup of the document.

</tl>

<p>The term "HTML" refers to both the document type and the markup
language for representing instances of that document type.

<h2>SGML Syntax

<p>An HTML document instance is a text file in which some of the
characters are markup.  Markup (tags) define the structure of the
document.

<h3>Elements

<p>Tags define the start and end of headings, paragraphs, lists,
character highlighting and links. Most HTML elements are identified in
a document as a start tag, which gives the element name and
attributes, followed by the content, followed by the end tag. Start
tags are delimited by "<" and ">"; end tags are delimited by "</" and
">". An example is:

<listing><![ CDATA [
<H1>This is a Heading</H1>
]]>
</listing>

<p>Some elements only have a start tag without an end tag. For
example, to create a line break, you use the &lt;BR> tag. Additionally,
the end tags of some other elements, such as Paragraph (&lt;P>), List
Item (&lt;LI>), Definition Term (&lt;DT>), and Definition Description (&lt;DD>)
elements, may be omitted.

<p>The content of an element is a sequence of characters and nested
elements. Some elements, such as anchors, cannot be nested. Anchors
and character highlighting may be put inside other constructs.

<NOTE>The SGML declaration for HTML specifies SHORTTAG YES, which
means that there are other valid syntaxes for tags, such as NET tags,
"&lt;EM/.../"; empty start tags, "&lt;>"; and empty end tags,
"&lt;/>". Until support for these idioms is widely deployed, their use
is strongly discouraged.
</note>

<h3>Names

<p>A name consists of a letter followed by up to 71 letters, digits,
periods, or hyphens. Element names are not case sensitive, but entity
names are. For example, <code/&lt;BLOCKQUOTE>/,
<code/&lt;BlockQuote>/, and <code/&lt;blockquote>/ are equivalent,
whereas <code/&amp;&amp;/ is different from <code/&amp;AMP;/.

<p>In a start tag, the element name must immediately follow the tag
open delimiter "<".

<h3>Attributes

<p>In a start tag, white space and attributes are allowed between the
element name and the closing delimiter. An attribute typically
consists of an attribute name, an equal sign, and a value (although
some attributes may be just a value). White space is allowed around
the equal sign.

<p>The value of the attribute may be either:

<ul>
<li>A string literal, delimited by single quotes or double quotes and
not containing any occurrences of the delimiting character.

<li>A name token (a sequence of letters, digits, periods, or hyphens)
</ul>

<p>In this example, A is the element name, HREF is the attribute name, and 
<code>http://host/dir/file.html</> is the attribute value:

<listing><![CDATA[
<A HREF="http://host/dir/file.html">
]]>
</listing>

<NOTE>Some non-SGML implementations consider any occurrence of the ">"
character to signal the end of a tag. For compatibility with such
implementations, when ">" appears in an attribute value, it should be
represented with a character entity reference, such as in: &lt;IMG
SRC="eq1.jpg" alt="a &#62; b">
</note>

<p>To put quotes inside of quotes, the character entity
<code/&amp;quot;/ may be used, as in:

<listing><![CDATA[
<IMG SRC="image.jpg" alt="First &quot;real&quot; example">
]]>
</listing>

<p>The length of an attribute value is limited to 1024 characters
after replacing any character entity references.

<NOTE>Some non-SGML implementations allow any character except space
or ">" in a name token. Attributes values must be quoted only if they
don't satisfy the syntax for a name token.
</note>

<p>Attributes with a declared value of NAME, such as ISMAP and
COMPACT, may be written using a minimized syntax. The markup:

<listing><![CDATA[
<UL COMPACT="compact">
]]>
</listing>

<p>can be written using a minimized syntax:

<listing><![CDATA[
<UL COMPACT>
]]>
</listing>

<NOTE>Some non-SGML implementations only understand the minimized
syntax.
</note>

<h3>Entity References

<p>SGML uses entity references, indicated by an ampersand (&) and
immediately followed by a name and terminated by a semicolon (;), to
represent a named substitution of data (the entity). HTML 2.0 only
uses entity references to represent peculiar and special
characters. The reference can be used in place of a character when the
character itself would be misinterpreted as markup. The entity sets
defined for use by HTML 2.0 documents are listed in Section 13.

<p>The HTML DTD includes a character entity for each of the SGML
markup characters, such that one may reference them by name if it is
inconvenient to enter them directly:

<listing><![CDATA[
GLYPH	NAMED	OCTET	CHARACTER NAME

  &	&amp;	&#38;	Ampersand	

  "	&quot;	&#34;	Quotation mark	

  <	&lt;	&#60;	Less than

  >	&gt;	&#62;	Greater than
]]>
</listing>

<p>To ensure that a sequence of data characters is not interpreted as
markup, all occurrences of "<", ">", and "&" must be replaced by their
character entity references.

<NOTE>There are SGML features, CDATA and RCDATA, to allow most "<",
">", and "&" characters to be entered without the use of entity
references. Because these features tend to be used and implemented
inconsistently, and because they require 8-bit characters to represent
non-ASCII characters, they are not used in this version of the HTML
DTD.
</note>

<h3>Comments

<p>To include comments in an HTML document that will be ignored by the
interpreter, surround them with "&lt;!--" and "-->". After the comment
delimiter, all text up to the next occurrence of "-->" is
ignored. Hence comments cannot be nested. White space is allowed
between the closing "--" and ">", but not between the opening "<!" and
"--".

<p>For example:

<listing><![CDATA[
<HEAD>
<TITLE>HTML Guide: Recommended Usage</TITLE>
<!-- $Id$ -->
</HEAD>
]]>
</listing>

<NOTE>Some historical HTML interpreters incorrectly consider any ">"
character to be the termination of a comment.
</note>

<h2>Example HTML Document

<listing><![CDATA[
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<!-- Here's a good place to put a comment. -->
<HEAD>
<TITLE>Structural Example</TITLE>
</HEAD><BODY>
<H1>First Header</H1>
<P>This is a paragraph in the example HTML file. Keep in mind 
that the title does not appear in the document text, but that 
the header (defined by H1) does.</P>
<OL>
<LI>First item in an ordered list.
<LI>Second item in an ordered list.
  <UL COMPACT>
  <LI> Note that lists can be nested;
  <LI> Whitespace may be used to assist in reading the 
       HTML source.
  </UL>
<LI>Third item in an ordered list.
</OL>

<P>This is an additional paragraph. Technically, end tags are 
not required for paragraphs, although they are allowed. You can 
include character highlighting in a paragraph. <EM>This sentence 
of the paragraph is emphasized.</EM> Note that the &lt;/P&gt; 
end tag has been omitted.
<P>
<IMG SRC ="triangle.xbm" alt="Warning:">
Be sure to read these <b>bold instructions</b>.
</BODY></HTML>
]]>
</listing>
